12

BPMN Notation and Diagrams

12.1 BPMN Diagram Interchange (BPMN DI)
12.1.1 Scope
This chapter specifies the meta-model and schema for BPMN 2.0 Diagram Interchange (BPMN DI). The BPMN DI is
meant to facilitate interchange of BPMN diagrams between tools rather than being used for internal diagram
representation by the tools. The simplest interchange approach to ensure the unambiguous rendering of a BPMN diagram
was chosen for BPMN DI. As such, BPMN DI does not aim to preserve or interchange any “tool smarts” between the
source and target tools (e.g., layout smarts, efficient styling, etc.).
BPMN DI does not address or define the interchange of color information. The use of alternative colors in BPMN is non
normative. The meaning or semantic of colors might vary from tool to tool or, from user to user, potentially leading to
miss-interpretations.
BPMN DI does not ascertain that the BPMN diagram is syntactically or semantically correct.

12.1.2 Diagram Definition and Interchange
The BPMN DI meta-model, similar to the BPMN abstract syntax meta-model, is defined as a MOF-based meta-model.
As such, its instances can be serialized and interchanged using XMI. BPMN DI is also defined by an XML schema. Thus
its instances can also be serialized and interchanged using XML.
Both, BPMN DI meta-model and schema are harmonized with a draft version of the OMG Diagram Definition (DD)
standard. Annex B contains the relevant parts of the referenced DD specifications that were used as foundation for the
BPMN DI model and schema. The provided DD contains two main parts: the Diagram Commons (DC) and the Diagram
Interchange (DI). The DC defines common types like bounds and fonts, while the DI provides a framework for defining
domain specific diagram models. As a domain specific DI, BPMN DI defines a few new meta-model classes that derive
from the abstract classes from DI.
The focus of BPMN DI is the interchange of laid out shapes and edges that constitute a BPMN diagram. Each shape and
edge references a particular BPMN model element. The referenced BPMN model elements are all part of the actual
BPMN model. As such, BPMN DI is meant to only contain information that is neither present, nor derivable, from the
BPMN model whenever possible. Simply put, to render a BPMN diagram both the BPMN DI instance(s) and the
referenced BPMN model are REQUIRED.
From the BPMN DI perspective, a BPMN diagram is a particular snapshot of a BPMN model at a certain point in time.
Multiple BPMN diagrams can be exchanged referencing model elements from the same BPMN model. Each diagram may
provide an incomplete or partial depiction of the content of the BPMN model. BPMN DI does not ascertain that the
BPMN diagram is syntactically or semantically correct.
As described in Section 15, a BPMN model package consists of one or more files. Each file may contain any number of
BPMN diagrams. The exporting tool is free to decide how many diagrams are exported and the importing tool is free to
decide if and how to present the contained diagrams to the user.

Business Process Model and Notation, v2.0

367

12.1.3 How to Read this Chapter
The normative BPMN 2.0 Diagram Interchange (BPMN DI) specification has three parts. Section 12.2 defines BPMN DI;
an instance of the DI meta-model provided at Annex B. Section 12.3 provides a library of the BPMN element depictions
and an unambiguous resolution between a referenced BPMN model element and its depiction. Finally, Section 12.4
provides examples to support the interpretation of the specification. Some BPMN diagram depictions along with their
XML BPMN DI serializations are provided.

12.2 BPMN Diagram Interchange (DI) Meta-model
12.2.1 Overview
The BPMN DI is an instance of the DI meta-model provided at Annex B. The basic concept of BPMN DI, as with DI in
general, is that serializing a diagram [BPMNDiagram] for interchange requires the specification of a collection of shapes
[BPMNShape] and edges [BPMNEdge] on a plane [BPMNPlane].
BPMNPlane, BPMNShape, and BPMNEdge MUST reference exactly one abstract syntax BPMN element from the
BPMN model using the bpmnElement attribute. The only exception is for a Data Association connected to a Sequence
Flow (See Figure 10.68). This is a visual short cut that actually normalizes two Data Associations within the BPMN
model. In this case, the resolution is made from the BPMN DI attributes rather than the abstract syntax reference
[bpmnElement] (See Table 12.35 - Depiction Resolution for Connecting Objects).
The BPMN DI classes only define the visual properties used for depiction. All other properties that are REQUIRED for
the unambiguous depiction of the BPMN element are derived from the referenced bpmnElement.
Multiple depictions of a specific BPMN element in a single diagram is NOT allowed, except for Participants in a
choreography (i.e., Participant Bands). For example, it is not allowed to depict a Task twice in the same diagram, but it
is allowed to depict the same Task in two different diagrams.
BPMN diagrams may be an incomplete or partial depiction of the content of the BPMN model. Some BPMN elements
from a BPMN model may not be present in any of the diagram instances being interchanged.
BPMN DI does not provide for any containment concept. The BPMNPlane is an ordered collection of mixed
BPMNShape(s) and BPMNEdge(s). The order of the BPMNShape(s) and BPMNEdge(s) inside a BPMNPlane determines
their Z-order (i.e., what is in front of what). BPMNShape(s) and BPMNEdge(s) that are meant to be depicted “on top” of
other BPMNShape(s) and BPMNEdge(s) MUST appear after them in the BPMNPlane. Therefore, the exporting tool
MUST order all BPMNShape(s) and BPMNEdge(s) such that the desired depiction can be rendered.

12.2.2 Abstract Syntax
This section introduces the Abstract Syntax of BPMN DI. BPMN DI is an instance of the DI meta-model provided at
Annex B.

368

Business Process Model and Notation, v2.0

Figure 12.1 - BPMN Diagram

Figure 12.2 - BPMN Plane

Figure 12.3 - BPMN Shape

Business Process Model and Notation, v2.0

369

Figure 12.4 - BPMN Edge

Figure 12.5 - BPMN Label

12.2.3 Classifier Descriptions
12.2.3.1 BPMNDiagram [Class]
BPMNDiagram is a kind of diagram that depicts all or part of a BPMN model.
Description
BPMNDiagram represents a depiction of all or part of a BPMN model. It specializes DI::Diagram and redefines the root
element (the top most diagram element) to be of type BPMNPlane. A BPMN diagram can also own a collection of
BPMNStyle elements that are referenced by BPMNLabel elements in the diagram. These style elements represent the
unique appearance styles used in the diagram.
Abstract Syntax
• Figure 12.1 - BPMN Diagram

370

Business Process Model and Notation, v2.0

Generalizations
• DI::Diagram

Associations
• + plane : BPMNPlane [1] {redefines rootElement}

a BPMN plane element that is the container of all diagram elements in this diagram.
• + labelStyle : BPMNLabelStyle [*] {subsets style}

a collection of BPMN label styles that are owned by the diagram and referenced by label elements.
Table 12.1 – BPMNDiagram XML schema

<xsd:complexType name="BPMNDiagram">
<xsd:complexContent>
<xsd:extension base="di:Diagram">
<xsd:sequence>
<xsd:element ref="bpmndi:BPMNPlane"/>
<xsd:element ref="bpmndi:BPMNLabelStyle" minOccurs="0" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
12.2.3.2 BPMNPlane [Class]
A BPMNPlane is the BPMNDiagram container of BPMNShape and BPMNEdge.
Description
A BPMNPlane specializes DI::Plane and redefines its model element reference to be of type (BPMN) BaseElement. A
BPMNPlane can only reference a BaseElement of the types: Process, SubProcess, AdHocSubProcess, Transaction,
Collaboration, Choreography or SubChoreography.
BPMNPlane element is always owned by a BPMNDiagram and represents the root diagram element of that diagram. The
plane represents a 2 dimensional surface with an origin at (0, 0) along the x and y axes with increasing coordinates to the
right and bottom. Only positive coordinates are allowed for diagram elements that are nested in a BPMNPlane. This
means that the union of all the nested elements' bounds is deemed to be located at the plane's origin point.
Abstract Syntax
• Figure 12.1 - BPMN Diagram
• Figure 12.2 - BPMN Plane

Generalizations
• DI::Plane

Business Process Model and Notation, v2.0

371

Associations
• + bpmnElement : BaseElement [0..1] {redefines modelElement}

a reference to either a Process, SubProcess, AdHocSubProcess, Transaction, Collaboration, Choreography or
SubChoreography in a BPMN model.
Table 12.2 – BPMNPlane XML schema

<xsd:complexType name="BPMNPlane">
<xsd:complexContent>
<xsd:extension base="di:Plane">
<xsd:attribute name="bpmnElement" type="xsd:QName"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>

12.2.3.3 BPMNShape [Class]
BPMNShape is a kind of shape that can depict a BPMN model element.
Description
BPMNShape represents a depiction of a (typically a node) BPMN model element. It specializes DI::LabeledShape and
redefines its model element reference to be of type (BPMN) BaseElement, allowing it to reference an element from a
BPMN model.
BPMNShape also contains an optional label of type BPMNLabel that can be nested in the shape when it has a visible
textual label with its own bounding box.
The shape also contains a number of normative notational options that can be specified for different types of BPMN
elements depicted by the shape. Those options, each represented by a separate property, and described below, allow for
recording the specific notational style desired for the shape.
All BPMNShape elements are owned directly by a BPMNPlane (that is the root element in a BPMNDiagram), i.e., shapes
are not nested within each other in the BPMN DI model although they may appear that way when depicted. The bounds
of a BPMNShape are always relative to that plane's origin point and are REQUIRED to be positive coordinates. Note that
the bounds’ x and y coordinates are the position of the upper left corner of the shape (relative to the upper left corner of
the plane).
Abstract Syntax
• Figure 12.3 - BPMN Shape
• Figure 12.4 - BPMN Edge

Generalizations
• DI::LabeledShape

372

Business Process Model and Notation, v2.0

Attributes
• + isHorizontal : Boolean [0..1]

an optional attribute that should be used only for Pools and Lanes. It determines if it should be depicted horizontally
(true) or vertically (false).
• + isExpanded : Boolean [0..1]

an optional attribute that should be used only for SubProcess, AdHocSubProcess, Transaction, SubChoreographies ,
CallActivities and CallChoreographies. It determines if it should be depicted expanded (true) or collapsed (false).
•

+ isMarkerVisible : Boolean [0..1]
an optional attribute that should be used only for Exclusive Gateway. It determines if the marker should be depicted on
the shape (true) or not (false).

• + participantBandKind : ParticipantBandKind [0..1]

an optional attribute that should only be used for Participant Bands. If this attribute is present, it means that the
participant should be depicted as a Participant Band instead of as a Pool.
• + isMessageVisible : Boolean [0..1]

an optional attribute that should only be used for Participant Bands. It determines if an envelope decorator should be
depicted linked to the Participant Band.
• + choreographyActivityShape : BPMNShape [0..1]

an optional attribute that should only be used for Participant Bands. It is REQUIRED for a BPMNShape depicting a
Participant Band. This is REQUIRED in order to relate the Participant Band to the BPMNShape depicting the
Choreography Activity that this Participant Band is related to.
Associations
• + bpmnElement : BaseElement [0..1] {redefines modelElement}

a reference to a BPMN node element that this shape depicts. Note that although optional a bpmnElement must be
provided for a BPMNShape.
• + label : BPMNLabel [0..1] {subsets ownedLabel}

an optional label that is nested when the shape has a visible text label with its own bounding box.

Business Process Model and Notation, v2.0

373

Table 12.3 – BPMNShape XML schema

<xsd:complexType name="BPMNShape">
<xsd:complexContent>
<xsd:extension base="di:LabeledShape">
<xsd:sequence>
<xsd:element ref="bpmndi:BPMNLabel" minOccurs="0"/>
</xsd:sequence>
<xsd:attribute name="bpmnElement" type="xsd:QName"/>
<xsd:attribute name="isHorizontal" type="xsd:boolean"/>
<xsd:attribute name="isExpanded" type="xsd:boolean"/>
<xsd:attribute name="isMarkerVisible" type="xsd:boolean"/>
<xsd:attribute name="isMessageVisible" type="xsd:boolean"/>
<xsd:attribute name="participantBandKind" type="bpmndi:ParticipantBandKind"/>
<xsd:attribute name="choreographyActivityShape" type="xsd:QName"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
12.2.3.4 ParticipantBandKind [Enumeration]
ParticipantBandKind defines the type of Participant Band to depict.
Description
Participant bands can be depicted in 3 ways:
1.

a top band is rectangular with rounded corners at the top

2.

a middle band is rectangular

3.

a bottom band is rectangular with rounded corners at the bottom

Participant bands can be depicted in 2 shadings:
1.

initiating (the band should not be shaded)

2.

non_initiating (the band should be shaded)

Abstract Syntax
• Figure 12.3 - BPMN Shape

Literals
• top_initiating - the band should be depicted as a non shaded top band
• middle_initiating - the band should be depicted as a non shaded middle band
• bottom_initiating - the band should be depicted as a non shaded bottom band
• top_non_initiating - the band should be depicted as a shaded top band
• middle_ non_initiating - the band should be depicted as a shaded middle band
• bottom_ non_initiating - the band should be depicted as a shaded bottom band

374

Business Process Model and Notation, v2.0

12.2.3.5 BPMNEdge [Class]
BPMNEdge is a kind of edge that can depict a relationship between two BPMN model elements.
Description
BPMNEdge represents a depiction of a relationship between two (source and target) BPMN model elements. It specializes
DI::LabeledEdge and redefines its model element reference to be of type (BPMN) BaseElement, allowing it to reference
a relationship element from a BPMN model.
BPMNEdge also redefines its source and target references to be of type DiagramElement (either BPMNShape or
BPMNEdge).
The source or target definition should only be present if the edge is depicted between a different source or target than the
one referenced by the BPMN model element of the BPMNEdge. Only the different source or target is REQUIRED. Both
attributes should be present only if both are different. This is the case, for instance, if a Message Flow target is not
depicted in the current diagram because it is inside a black box Pool. The Message Flow could then define its target as
being the BPMNShape depicting the Pool to connect it to the boundary of that black box Pool.
BPMNEdge also contains an optional label of type BPMNLabel that can be nested in the edge when it has a visible
textual label with its own bounding box.
All BPMNEdge elements are owned directly by a BPMNPlane (that is the root element in a BPMNDiagram). The
waypoints of BPMNEdge are always relative to that plane’s origin point and are REQUIRED to be positive coordinates.
Abstract Syntax
• Figure 12.4 - BPMN Edge

Generalizations
• DI::LabeledEdge

Associations
• + label : BPMNLabel [0..1] {subsets ownedLabel}

an optional label that is nested when the edge has a visible text label with its own bounding box.
• + bpmnElement : BaseElement [0..1] {redefines modelElement}

a reference to a connecting BPMN element that this edge depicts. Note that this reference is only optional for
the specific case of a Data Association connected to a Sequence Flow; in all other cases a referenced element
must be provided.
• + sourceElement : DiagramElement [0..1] {redefines source}

an optional reference to the edge’s source element if it is different from the source inferred from the
bpmnElement association.
• + targetElement : DiagramElement [0..1] {redefines target}

an optional reference to the edge’s target element if it is different from the target inferred from the bpmnElement
association.
• messageVisibleKind : MessageVisibleKind [0..1]

an optional attribute that should be used only for Message Flow. It determines if an envelope decorator should be
depicted and the kind of envelope to be depicted.

Business Process Model and Notation, v2.0

375

Table 12.4 – BPMNEdge XML schema

<xsd:complexType name="BPMNEdge">
<xsd:complexContent>
<xsd:extension base="di:LabeledEdge">
<xsd:sequence>
<xsd:element ref="bpmndi:BPMNLabel" minOccurs="0" />
</xsd:sequence>
<xsd:attribute name="bpmnElement" type="xsd:QName" />
<xsd:attribute name="sourceElement" type="xsd:QName" />
<xsd:attribute name="targetElement" type="xsd:QName" />
<xsd:attribute name="messageVisibleKind" type="bpmndi:MessageVisibleKind" />
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
12.2.3.6 MessageVisibleKind [Enumeration]
MessageVisibleKind defines the type of envelope that is visible.
Description
MessageVisibleKind is applicable only to Participant Band and Message Flow.
For Message Flow, the envelope should be positioned in the middle of the edge.
For Participant Band, the envelope should be positioned over (for top band) or under (for bottom band) and connected to
the band using an association. Note that only Choreography Task Participant Bands are allowed to show the envelope.
Middle bands being only used for a SubChoreography can thus not have envelope showing.
Abstract Syntax
• Figure 12.3 - BPMN Shape

Literals
• initiating - The envelope should not be shaded.
• non_inititating - The envelope should be shaded.

12.2.3.7 BPMNLabel [Class]
BPMNLabel is a kind of label that depicts textual info about a BPMN element.
Description
BPMNLabel represents a depiction of some textual information about a BPMN element. It specializes DI::Label and
redefines its style reference to be of type BPMNLabelStyle, which contains information about the appearance of the label
(e.g., the chosen font). The referenced style is owned by the diagram that nests the label.
A BPMN label is not a top-level element but is always nested inside either a BPMNShape or a BPMNEdge. It does not
have its own reference to a BPMN element but rather inherits that reference (if any) from its parent shape or edge. The
textual info depicted by the label is derived from that referenced BPMN element.
376

Business Process Model and Notation, v2.0

The bounds of BPMNLabel are always relative to the containing plane’s origin point. Note that the bounds’ x and y
coordinates are the position of the upper left corner of the label (relative to the upper left corner of the plane).
Abstract Syntax
• Figure 12.3 - BPMN Shape
• Figure 12.4 - BPMN Edge
• Figure 12.5 - BPMN Label

Generalizations
• DI::Label

Associations
• + labelStyle : BPMNLabelStyle [0..1] {redefines style}

an optional reference to a label style (owned by the diagram) that gives the appearance options for the label. If
not specified, the style of the label can be assumed by a tool.
Table 12.5 – BPMNLabel XML schema

<xsd:complexType name="BPMNLabel">
<xsd:complexContent>
<xsd:extension base="di:Label">
<xsd:attribute name="labelStyle" type="xsd:QName" />
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
12.2.3.8 BPMNLabelStyle [Class]
BPMNLabelStyle is a kind of style that gives the appearance options for a BPMNLabel.
Description
BPMNLabelStyle represents the appearance options for elements of type BPMNLabel. It specializes DI::Style and
contains a description of a font that is used in depicting a BPMNLabel. One or more labels may reference the same
BPMNLabelStyle element, which must be owned by a BPMNDiagram.
Abstract Syntax
• Figure 12.1 - BPMN Diagram
• Figure 12.5 - BPMN Label

Generalizations
• DI::Style

Attributes
• + font : Font[1] - a font object that describes the properties of the font used for depicting the labels that reference this

style.
Business Process Model and Notation, v2.0

377

Table 12.6 – BPMNLabelStyle XML schema

<xsd:complexType name="BPMNLabelStyle">
<xsd:complexContent>
<xsd:extension base="di:Style">
<xsd:sequence>
<xsd:element ref="dc:Font"/>
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>

12.2.4 Complete BPMN DI XML Schema
Table 12.7 - Complete BPMN DI XML schema

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpmndi="http://www.omg.org/spec/BPMN/
20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/
20100524/DI" targetNamespace="http://www.omg.org/spec/BPMN/20100524/DI"
elementFormDefault="qualified" attributeFormDefault="unqualified">
<xsd:import namespace="http://www.omg.org/spec/DD/20100524/DC" schemaLocation="DC.xsd" />
<xsd:import namespace="http://www.omg.org/spec/DD/20100524/DI" schemaLocation="DI.xsd" />
<xsd:element name="BPMNDiagram" type="bpmndi:BPMNDiagram" />
<xsd:element name="BPMNPlane" type="bpmndi:BPMNPlane" />
<xsd:element name="BPMNLabelStyle" type="bpmndi:BPMNLabelStyle" />
<xsd:element name="BPMNShape" type="bpmndi:BPMNShape" substitutionGroup="di:DiagramElement" />
<xsd:element name="BPMNLabel" type="bpmndi:BPMNLabel" />
<xsd:element name="BPMNEdge" type="bpmndi:BPMNEdge" substitutionGroup="di:DiagramElement" />
<xsd:complexType name="BPMNDiagram">
<xsd:complexContent>
<xsd:extension base="di:Diagram">
<xsd:sequence>
<xsd:element ref="bpmndi:BPMNPlane" />
<xsd:element ref="bpmndi:BPMNLabelStyle" maxOccurs="unbounded" minOccurs="0" />
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>

378

Business Process Model and Notation, v2.0

Table 12.7 – Complete BPMN DI XML schema (continued)

<xsd:complexType name="BPMNPlane">
<xsd:complexContent>
<xsd:extension base="di:Plane">
<xsd:attribute name="bpmnElement" type="xsd:QName" />
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:complexType name="BPMNEdge">
<xsd:complexContent>
<xsd:extension base="di:LabeledEdge">
<xsd:sequence>
<xsd:element ref="bpmndi:BPMNLabel" minOccurs="0" />
</xsd:sequence>
<xsd:attribute name="bpmnElement" type="xsd:QName" />
<xsd:attribute name="sourceElement" type="xsd:QName" />
<xsd:attribute name="targetElement" type="xsd:QName" />
<xsd:attribute name="messageVisibleKind" type="bpmndi:MessageVisibleKind" />
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:complexType name="BPMNShape">
<xsd:complexContent>
<xsd:extension base="di:LabeledShape">
<xsd:sequence>
<xsd:element ref="bpmndi:BPMNLabel" minOccurs="0" />
</xsd:sequence>
<xsd:attribute name="bpmnElement" type="xsd:QName" />
<xsd:attribute name="isHorizontal" type="xsd:boolean" />
<xsd:attribute name="isExpanded" type="xsd:boolean" />
<xsd:attribute name="isMarkerVisible" type="xsd:boolean" />
<xsd:attribute name="isMessageVisible" type="xsd:boolean" />
<xsd:attribute name="participantBandKind" type="bpmndi:ParticipantBandKind" />
<xsd:attribute name="choreographyActivityShape" type="xsd:QName"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>

Business Process Model and Notation, v2.0

379

Table 12.7 – Complete BPMN DI XML schema (continued)

<xsd:complexType name="BPMNLabel">
<xsd:complexContent>
<xsd:extension base="di:Label">
<xsd:attribute name="labelStyle" type="xsd:QName" />
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:complexType name="BPMNLabelStyle">
<xsd:complexContent>
<xsd:extension base="di:Style">
<xsd:sequence>
<xsd:element ref="dc:Font" />
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:simpleType name="ParticipantBandKind">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="top_initiating" />
<xsd:enumeration value="middle_initiating" />
<xsd:enumeration value="bottom_initiating" />
<xsd:enumeration value="top_non_initiating" />
<xsd:enumeration value="middle_non_initiating" />
<xsd:enumeration value="bottom_non_initiating" />
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="MessageVisibleKind">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="initiating" />
<xsd:enumeration value="non_initiating" />
</xsd:restriction>
</xsd:simpleType>
</xsd:schema>

12.3 Notational Depiction Library and Abstract Element Resolutions
As a notation, BPMN specifies the depiction for each of the BPMN elements.
Serializing a BPMN diagram for interchange requires the specification of a collection of BPMNShape(s) (see page 372)
and BPMNEdge(s) (see page 375) on the BPMNPlane (see page 371) of the BPMNDiagram (see page 370). The
BPMNShape(s) and BPMNEdge(s) attributes must be populated in such a way as to allow the unambiguous rendering of
the BPMN diagram by the receiving party. More specifically, the BPMNShape(s) and BPMNEdge(s) must reference
380

Business Process Model and Notation, v2.0

BPMN model element [bpmnElement]. If no bpmnElement is referenced or if the reference is invalid, it is expected that
this shape or edge should not be depicted. The only exception is for a Data Association connected to a Sequence Flow
(See Figure 10.68). This is a visual short cut that actually normalizes two Data Associations within the BPMN model. In
this case, the resolution is made from the BPMN DI attributes rather than the abstract syntax reference [bpmnElement]
(See Table 12.35 - Depiction Resolution for Connecting Objects).
When rendering a BPMN diagram, the correct depiction of a BPMNShape or BPMNEdge depends mainly on the
referenced BPMN model element [bpmnElement] and its particular attributes and/or references.
The purpose of this section is to: provide a library of the BPMN element depictions, and to provide an unambiguous
resolution between the referenced BPMN model element [bpmnElement], BPMNShape or BPMNEdge and their
depiction. Depiction resolution tables are provided below for both BPMNShape (Section 12.3.2) and BPMNEdge (Section
12.3.3).

12.3.1 Labels
Both BPMNShape and BPMNEdge may have labels (e.g., its name) placed inside the shape/edge, or above or below the
shape/edge, in any direction or location, depending on the preference of the modeler or modeling tool vendor.
Labels are optional for BPMNShape and BPMNEdge. When there is a label, the position of the label is specified by the
bounds of the BPMNLabel of the BPMNShape or BPMNEdge. Simply put, label visibility is defined by the presence of
the BPMNLabel element. The bounds of the BPMNLabel are optional and always relative to the containing BPMNPlane's
origin point (see page 376). The depiction resolution tables provided below exemplify default label positions for
BPMNShape kinds (Section 12.3.2) and BPMNEdge kinds (Section 12.3.3) if no BPMNLabel bounds are provided.
The text of the label to be rendered is obtained by resolving the name attribute of the referenced BPMN model element
[bpmnElement] from the BPMNShape or BPMNEdge. In the particular case when the referenced BPMN model element
[bpmnElement] is a DataObjectReference, the text of the label to be rendered is obtained by concatenating the name
attribute of the referenced BPMN model element [bpmnElement] and the name attribute of the dataState attribute of this
DataObjectReference (see Figure 12.6 - Depicting a Label for a DataObjectReference with its state).

Label
[State]
Figure 12.6 - Depicting a Label for a DataObjectReference with its state

The properties of the font to be used for rendering the label are optional and provided by the labelStyle of the
BPMNLabel. If not provided, the tool should use its default style to depict the label.

12.3.2 BPMNShape
Markers for Activities
Various BPMN Activities can be decorated with markers at the bottom center of the shape.

Business Process Model and Notation, v2.0

381

Loop Characteristic markers may need to be rendered when the referenced BPMN model element [bpmnElement] of a
BPMNShape is a Task, ServiceTask, SendTask, ReceiveTask, UserTask, ManualTask, BusinessRuleTask, ScriptTask,
SubProcess, AdHocSubProcess, Transaction or CallActivity. Note that Loop Characteristic Markers (Loop, Multi-Instance
- Parallel and Multi-Instance - Sequential) are mutually exclusive markers. That is, only one of them can be present on a
single shape. See Table 10.8 - Depiction Resolution for Loop Characteristic Markers. Note that the patterns of Markers
depicted in Table 10.8 also apply to Transaction and Call Activity which have different border depictions (i.e., double
border or thick border).
A Compensation marker may need to be rendered when the referenced BPMN model element [bpmnElement] of a
BPMNShape is a Task, ServiceTask, SendTask, ReceiveTask, UserTask, ManualTask, BusinessRuleTask, ScriptTask,
SubProcess, AdHocSubProcess, Transaction or CallActivity. See Table 12.8 - Depiction Resolution for Compensation
Marker.
In the case of expandable kind of shapes, the markers (Compensation or Loop Characteristic) are placed to the left of the
+ on the shape.
The Compensation marker may be combined with a Loop Characteristic Marker. All the markers that are present must be
grouped and the whole group centered to the bottom of the shape. See Figure 12.7 - Combined Compensation and Loop
Characteristic Marker Example.
Note that in the case where the referenced BPMN model element [bpmnElement] of a BPMNShape is an
AdHocSubProcess, the shape has its tilde marker to the right of the + (See page 386).
Table 12.8 - Depiction Resolution for Loop Compensation Marker

Loop
Characteristic
Marker:

Specific Depiction Resolution:
Depiction:

Standard Loop
Label

Label

bpmnElement:

[Task, ServiceTask, SendTask,
ReceiveTask, UserTask,
ManualTask, BusinessRuleTask,
ScriptTask, SubProcess,
AdHocSubProcess, Transaction
or CallActivity] where
loopCharacteristics is of type
StandardLoopCharacteristics

BPMNShape
Attributes:
None

Label

382

Business Process Model and Notation, v2.0

Table 12.8 - Depiction Resolution for Loop Compensation Marker

Loop
Characteristic
Marker:

Specific Depiction Resolution:
Depiction:

Multi-Instance Parallel

Label

Label

bpmnElement:

BPMNShape
Attributes:

[Task, ServiceTask, SendTask,
ReceiveTask, UserTask,
ManualTask, BusinessRuleTask,
ScriptTask, SubProcess,
AdHocSubProcess, Transaction
or CallActivity] where
loopCharacteristics is of type
MultipleLoopCharacteristics with
attribute isSequantial to false.

None

[Task, ServiceTask, SendTask,
ReceiveTask, UserTask,
ManualTask, BusinessRuleTask,
ScriptTask, SubProcess,
AdHocSubProcess, Transaction
or CallActivity] where
loopCharacteristics is of type
MultipleLoopCharacteristics with
attribute isSequantial to true.

None

Label

Multi-Instance Sequential

Label

Label

Label

Business Process Model and Notation, v2.0

383

Table 12.8 – Depiction Resolution for Compensation Marker

Compensation
Marker:

Specific Depiction Resolution:
Depiction:

bpmnElement:

Compensation

[Task, ServiceTask, SendTask,
ReceiveTask, UserTask,
ManualTask, BusinessRuleTask,
ScriptTask, SubProcess,
AdHocSubProcess, Transaction
or CallActivity] where
isForCompensation is true.

Label

Label

BPMNShape
Attributes:
None

Label

Label

Label

Label

Figure 12.7 - Combined Compensation and Loop Characteristic Marker Example

Tasks [BPMNShape]
There are different types of Tasks identified within BPMN. The specific Task type depiction is obtained by placing a Task
type maker in the upper left corner of the Task shape. A Task that is no further specified is called an Abstract Task.
Tasks (Abstract, Service, Send, Receive, User, Manual, Business Rule or Script) can also have Compensation and/or Loop
Characteristic markers at the bottom center of the shape as defined above (see page 381).

384

Business Process Model and Notation, v2.0

Table 12.9 – Depiction Resolution for Tasks

Specific Depiction Resolution:
Kind:

Depiction:

Abstract Task

bpmnElement:

BPMNShape
Attributes:

Task

None

ServiceTask

None

SendTask

None

ReceiveTask

None

UserTask

None

ManualTask

None

BusinessRuleTask

None

ScriptTask

None

Label

Service Task
Label

Send Task
Label

Receive Task
Label

User Task
Label

Manual Task
Label

Business Rule Task
Label

Script Task
Label

Business Process Model and Notation, v2.0

385

Collapsed Sub-Processes [BPMNShape]
Collapsed Sub-Processes can also have Compensation and/or Loop Characteristic markers at the bottom center of the
shape as defined above (see page 381).
Table 12.10 – Depiction Resolution for Collapsed Sub-Processes

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:
SubProcess where
triggeredByEvent is false.

Sub-Process Collapsed
Label

BPMNShape
Attributes:
None or
isExpanded is
false

Expanded Sub-Processes [BPMNShape]
Expanded Sub-Processes can also have Compensation and/or Loop Characteristic markers at the bottom center of the
shape as defined above (see page 381).
Table 12.11 – Depiction Resolution for Expanded Sub-Processes

Specific Depiction Resolution:
Kind:

Sub-Process Expanded

Depiction:

Label

bpmnElement:

SubProcess where
triggeredByEvent is false.

BPMNShape
Attributes:
isExpanded is
true

Collapsed Ad Hoc Sub-Processes [BPMNShape]
Collapsed Ad Hoc Sub-Processes can also have a Compensation marker at the bottom center of the shape as defined
above (see page 381).

386

Business Process Model and Notation, v2.0

Table 12.12 – Depiction Resolution for Collapsed Ad Hoc Sub-Processes

Specific Depiction Resolution:
Kind:

Depiction:

Ad Hoc Sub-Process Collapsed

bpmnElement:
AdHocSubProcess

Label

BPMNShape
Attributes:
None or
isExpanded is
false

~
Expanded Ad Hoc Sub-Processes [BPMNShape]
Expanded Ad Hoc Sub-Processes can also have a Compensation marker at the bottom center of the shape as defined
above (see page 381).
Table 12.13 – Depiction Resolution for Expanded Ad Hoc Sub-Processes

Specific Depiction Resolution:
Kind:

Ad Hoc Sub-Process Expanded

Depiction:

bpmnElement:
AdHocSubProcess

Label

BPMNShape
Attributes:
None or
isExpanded is
true

~
Collapsed Transactions [BPMNShape]
Collapsed Transactions can also have Compensation and/or Loop Characteristic markers at the bottom center of the shape
as defined above (see page 381).
Table 12.14 – Depiction Resolution for Collapsed Transactions

Specific Depiction Resolution:
Kind:

Depiction:

Transaction

Transaction Collapsed
Label

Business Process Model and Notation, v2.0

bpmnElement:

BPMNShape
Attributes:
None or
isExpanded is
false

387

Expanded Transactions [BPMNShape]
Expanded Transactions can also have Compensation and/or Loop Characteristic markers at the bottom center of the shape
as defined above (see page 381).
Table 12.15 – Depiction Resolution for Tasks

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:
Transaction

Transaction Expanded

BPMNShape
Attributes:
None or
isExpanded is
true

Label

Collapsed Event Sub-Processes [BPMNShape]
Table 12.16 – Depiction Resolution for Collapsed Event Sub-Processes

Specific Depiction Resolution:
Kind:

Depiction:

Non-interrupting Message - Event
Sub-Process - Collapsed
Label

Interrupting - Message - Event
Sub-Process - Collapsed
Label

Non-interrupting - Timer - Event
Sub-Process - Collapsed
Label

388

bpmnElement:

BPMNShape
Attributes:

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
MessageEventDefintion and
isInterrupting is false.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
MessageEventDefintion and
isInterrupting is true.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
TimerEventDefintion and
isInterrupting is false.

None or
isExpanded is
false

Business Process Model and Notation, v2.0

Table 12.16 – Depiction Resolution for Collapsed Event Sub-Processes

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
TimerEventDefintion and
isInterrupting is true.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
ConditionalEventDefintion and
isInterrupting is false.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
ConditionalEventDefintion and
isInterrupting is true.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
SignalEventDefintion and
isInterrupting is false.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
SignalEventDefintion and
isInterrupting is true.

None or
isExpanded is
false

Label

SubProcess where
triggeredByEvent is true and the
one-and-only start event has
multiple EventDefintions and
isInterrupting is false.

None or
isExpanded is
false

Label

SubProcess where
triggeredByEvent is true and the
one-and-only start event has
multiple EventDefintions and
isInterrupting is true.

None or
isExpanded is
false

Interrupting - Timer - Event
Sub-Process - Collapsed
Label

Non-interrupting - Conditional Event Sub-Process - Collapsed
Label

Interrupting - Conditional Event Sub-Process - Collapsed
Label

Non-interrupting - Signal Event Sub-Process - Collapsed
Label

Interrupting - Signal Event Sub-Process - Collapsed
Label

Non-interrupting- Multiple Event Sub-Process - Collapsed

Interrupting - Multiple Event Sub-Process - Collapsed

Business Process Model and Notation, v2.0

389

Table 12.16 – Depiction Resolution for Collapsed Event Sub-Processes

Non-interrupting - Parallel
Multiple - Event Sub-Process Collapsed

Interrupting - Parallel
Multiple - Event Sub-Process Collapsed

Label

Label

Non-interrupting - Escalation Event Sub-Process - Collapsed
Label

Interrupting - Escalation Event
Sub-Process - Collapsed
Label

Interrupting - Error Event Sub-Process -Collapsed
Label

Interrupting - Compensation Event Sub-Process - Collapsed
Label

390

SubProcess where
triggeredByEvent is true and the
one-and-only start event has
multiple EventDefintions and
isInterrupting is false and
isParallelMultiple is true.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has
multiple EventDefintions and
isInterrupting is true and
isParallelMultiple is true.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
EscalationEventDefintion and
isInterrupting is false.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
EscalationEventDefintion and
isInterrupting is true.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
ErrorEventDefintion and
isInterrupting is true.

None or
isExpanded is
false

SubProcess where
triggeredByEvent is true and the
one-and-only start event has one
EventDefintion of type
CompensationEventDefintion and
isInterrupting is true.

None or
isExpanded is
false

Business Process Model and Notation, v2.0

Expanded Event Sub-Processes [BPMNShape]
Table 12.17 – Depiction Resolution for Expanded Event Sub-Processes

Specific Depiction Resolution:
Kind:

Event Sub-Process Expanded

Depiction:

bpmnElement:

BPMNShape
Attributes:

SubProcess where
triggeredByEvent is true.

Label

isExpanded is
true

Call Activities (Calling a Global Task) [BPMNShape]
A Call Activity (Calling a Global Task) must display the Task type marker of the Global Task it calls.
Call Activities (Calling a Global Task) can also have Compensation and/or Loop Characteristic markers at the bottom
center of the shape as defined above (see page 381).
Table 12.18 – Depiction Resolution for Call Activities (Calling a Global Task)

Specific Depiction Resolution:
Kind:

Depiction:

Call Activity
Label

User Call Activity
Label

Manual Call Activity

bpmnElement:

BPMNShape
Attributes:

CallActivity where calledElement is
unspecified or of type GlobalTask.

None

CallActivity where calledElement is of
type GlobalUserTask.

None

CallActivity where calledElement is of
type GlobalManualTask.

None

CallActivity where calledElement is of
type GlobalBusinessRuleTask.

None

Label

Business Rule Call
Activity
Label

Business Process Model and Notation, v2.0

391

Table 12.18 – Depiction Resolution for Call Activities (Calling a Global Task)
Script Call Activity
Label

CallActivity where calledElement is of
type GlobalScriptTask.

None

Collapsed Call Activities (Calling a Process) [BPMNShape]
Table 12.19 – Depiction Resolution for Collapsed Call Activities (Calling a Process)

Specific Depiction Resolution:
Kind:

Depiction:

Call Activity Collapsed

bpmnElement:
CallActivity where calledElement
is of type Process.

Label

BPMNShape
Attributes:
None or
isExpanded is
false

Expanded Call Activities (Calling a Process) [BPMNShape]
Table 12.20 – Depiction Resolution for Expanded Call Activities (Calling a Process)

Specific Depiction Resolution:
Kind:

Call Activity Expanded

Depiction:

Label

bpmnElement:

CallActivity where calledElement
is of type Process.

BPMNShape
Attributes:
None or
isExpanded is
true

Data [BPMNShape]
Data Inputs and Data Outputs rendering are optional and only allowed for Processes.

392

Business Process Model and Notation, v2.0

Table 12.21 – Depiction Resolution for Data

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:

BPMNShape
Attributes:

Data Object

DataObjectReference where
dataObjectRef unspecified or is
pointing to a DataObject where
isCollection is false.

None

Data Object
Collection

DataObjectReference where
dataObjectRef is pointing to a
DataObject where isCollection is
true.

None

Data Input

DataInput where isCollection is false.

None

Data Input Collection

DataInput where isCollection is true.

None

Data Output

DataOutput where isCollection is
false.

None

Data Output Collection

DataOutput where isCollection is
true.

None

Data Store

DataStoreReference

None

Label

Business Process Model and Notation, v2.0

393

Events [BPMNShape]
Table 12.22 – Depiction Resolution for Events

Specific Depiction Resolution:
Kind:

Depiction:

None Start Event

bpmnElement:

BPMNShape
Attributes:

StartEvent with no EventDefinition

None

StartEvent with one EventDefinition
of type MessageEventDefinition and
isInterrupting is true.

None

StartEvent with one EventDefinition
of type MessageEventDefinition and
isInterrupting is false.

None

StartEvent with one EventDefinition
of type TimerEventDefinition and
isInterrupting is true.

None

Non-interrupting - Timer Start
Event

StartEvent with one EventDefinition
of type TimerEventDefinition and
isInterrupting is false.

None

Interrupting Conditional Start Event

StartEvent with one EventDefinition
of type ConditionalEventDefinition
and isInterrupting is true.

None

Non-interrupting -Conditional
Start Event

StartEvent with one EventDefinition
of type ConditionalEventDefinition
and isInterrupting is false.

None

Interrupting Signal Start Event

StartEvent One EventDefinition of
type SignalEventDefinition and
isInterrupting is true.

None

Non-interrupting -Signal Start
Event

StartEvent with one EventDefinition
of type SignalEventDefinition and
isInterrupting is false.

None

Label

Interrupting - Message Start
Event
Label

Non-interrupting - Message
Start Event
Label

Interrupting - Timer Start
Event
Label

394

Business Process Model and Notation, v2.0

Table 12.22 – Depiction Resolution for Events

Interrupting Multiple Start
Event

StartEvent with more than one
EventDefinition, parallelMultiple is
false and isInterrupting is true.

None

Non-interrupting Multiple Start
Event

StartEvent with more than one
EventDefinition, parallelMultiple is
false and isInterrupting is false.

None

Interrupting - Parallel Multiple
Start Event

StartEvent with more than one
EventDefinition, parallelMultiple is
true and isInterrupting is true.

None

Non-interrupting - Parallel
Multiple Start Event

StartEvent with more than one
EventDefinition, parallelMultiple is
true and isInterrupting is false.

None

Interrupting Escalation Start Event

StartEvent with one EventDefinition
of type EscalationEventDefinition
and isInterrupting is true.

None

Non-interrupting - Escalation
Start Event

StartEvent with one EventDefinition
of type EscalationEventDefinition
and isInterrupting is false.

None

Interrupting - Error Start Event

StartEvent with one EventDefinition
of type ErrorEventDefinition.

None

Interrupting Compensation Start Event

StartEvent with one EventDefinition
of type
CompensationEventDefinition.

None

Interrupting - None
Intermediate Event

IntermediateThrowEvent with no
EventDefinition.

None

Catch - Message
Intermediate Event

IntermediateCatchEvent with one
EventDefinition of type
MessageEventDefinition.

None

Label

Business Process Model and Notation, v2.0

395

Table 12.22 – Depiction Resolution for Events

Interrupting - Boundary Catch - Message
Intermediate Event

BoundaryEvent with one
EventDefinition of type
MessageEventDefinition and
cancelActivity is true.

None

Non-interrupting - Boundary Catch - Message
Intermediate Event

BoundaryEvent with one
EventDefinition of type
MessageEventDefinition and
cancelActivity is false.

None

Throw - Message
Intermediate Event

IntermediateThrowEvent with one
EventDefinition of type
MessageEventDefinition.

None

Timer Intermediate Event

IntermediateCatchEvent with one
EventDefinition of type
TimerEventDefinition.

None

Interrupting - Boundary Timer Intermediate Event

BoundaryEvent with one
EventDefinition of type
TimerEventDefinition and
cancelActivity is true.

None

Non-interrupting Boundary Timer Intermediate Event

IntermediateCatchEvent with one
EventDefinition of type
TimerEventDefinition and
cancelActivity is false.

None

Conditional
Intermediate Event

IntermediateCatchEvent with one
EventDefinition of type
ConditionalEventDefinition.

None

Interrupting - Boundary Conditional Intermediate
Event

BoundaryEvent with one
EventDefinition of type
ConditionalEventDefinition and
cancelActivity is true.

None

Non-interrupting - Boundary Conditional
Intermediate Event

BoundaryEvent with one
EventDefinition of type
ConditionalEventDefinition and
cancelActivity is false.

None

Catch - Signal
Intermediate Event

IntermediateCatchEvent with one
EventDefinition of type
MessageEventDefinition.

None

396

Business Process Model and Notation, v2.0

Table 12.22 – Depiction Resolution for Events

Interrupting - Boundary Catch - Signal Intermediate
Event

BoundaryEvent with one
EventDefinition of type
SignalEventDefinition and
cancelActivity is true.

None

Non-interrupting-Boundary Catch - Signal Intermediate
Event

BoundaryEvent with one
EventDefinition of type
SignalEventDefinition and
cancelActivity is false.

None

Interrupting - Boundary Throw - Signal Intermediate
Event

IntermediateThrowEvent with one
EventDefinition of type
SignalEventDefinition.

None

Catch - Multiple Intermediate
Event

IntermediateCatchEvent with more
than one EventDefinition and
parallelMultiple is false.

None

Interrupting - Boundary Catch - Multiple
Intermediate Event

BoundaryEvent with more than one
EventDefinition, parallelMultiple is
false and cancelActivity is true.

None

Non-interrupting Boundary Catch - Multiple
Intermediate Event

BoundaryEvent with more than one
EventDefinition, parallelMultiple is
false and cancelActivity is false.

None

Throw - Multiple
Intermediate Event

IntermediateThrowEvent with more
than one EventDefinition and
parallelMultiple is false.

None

Catch - Parallel Multiple
Intermediate Event

IntermediateCatchEvent with more
than one EventDefinition and
parallelMultiple is true.

None

Interrupting - Boundary Catch -Parallel Multiple
Intermediate Event

BoundaryEvent with more than one
EventDefinition, parallelMultiple is
true and cancelActivity is true.

None

Non-interrupting Boundary Catch -Parallel Multiple Intermediate Event

BoundaryEvent with more than one
EventDefinition, parallelMultiple is
true and cancelActivity is false.

None

Business Process Model and Notation, v2.0

397

Table 12.22 – Depiction Resolution for Events

Catch -Escalation
Intermediate Event

IntermediateCatchEvent with one
EventDefinition of type
EscalationEventDefinition.

None

Interrupting - Boundary Catch -Escalation
Intermediate Event

BoundaryEvent with one
EventDefinition of type
EscalationEventDefinition and
cancelActivity is true.

None

Non-interrupting -Boundary Catch -Escalation
Intermediate Event

BoundaryEvent with one
EventDefinition of type
EscalationEventDefinition and
cancelActivity is false.

None

Throw - Escalation
Intermediate Event

IntermediateThrowEvent with one
EventDefinition of type
EscalationEventDefinition.

None

Boundary - Catch - Error
Intermediate Event

BoundaryEvent with one
EventDefinition of type
ErrorEventDefinition

None

Boundary - Catch Compensation
Intermediate Event

BoundaryEvent with one
EventDefinition of type
CompensateEventDefinition

None

Throw - Compensation
Intermediate Event

IntermediateThrowEvent with one
EventDefinition of type
CompensateEventDefinition

None

Catch - Link Intermediate
Event

IntermediateCatchEvent with one
EventDefinition of type
LinkEventDefinition\

None

Throw - Link
Intermediate Event

IntermediateThrowEvent with one
EventDefinition of type
LinkEventDefinition

None

Boundary - Catch - Cancel
Intermediate Event

BoundaryEvent with one
EventDefinition of type
CancelEventDefinition

None

398

Business Process Model and Notation, v2.0

Table 12.22 – Depiction Resolution for Events

None End Event

EndEvent with no EventDefinition

None

Message End Event

EndEvent with one EventDefinition
of type MessageEventDefiniton

None

Signal End Event

EndEvent with one EventDefinition
of type SignalEventDefiniton

None

Multiple End Event

EndEvent with more than one
EventDefinition

None

Escalation End Event

EndEvent with one EventDefinition
of type EscalationEventDefiniton

None

Error End Event

EndEvent with one EventDefinition
of type ErrorEventDefiniton

None

Compensation End Event

EndEvent with one EventDefinition
of type CompensateEventDefiniton

None

Cancel End Event

EndEvent with one EventDefinition
of type CancelEventDefiniton

None

Terminate End Event

EndEvent with one EventDefinition
of type TerminateEventDefiniton

None

Business Process Model and Notation, v2.0

399

Gateways [BPMNShape]
Table 12.23 – Depiction Resolution for Gateways

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:

BPMNShape
Attributes:

Exclusive Gateway without Marker

ExclusiveGateway

None or
isMarkerVisible is
false

Exclusive Gateway with Marker

ExclusiveGateway

isMarkerVisible is
true

Inclusive Gateway

InclusiveGateway

None

Parallel Gateway

ParallelGateway

None

Complex Gateway

ComplexGateway

None

Event-Based Gateway

EventBasedGateway where
instantiate is false.

None

Event-Based Gateway
to Start a Process

EventBasedGateway where
instantiate is true and
eventGatewayType is exclusive.

None

400

Business Process Model and Notation, v2.0

Table 12.23 – Depiction Resolution for Gateways

EventBasedGateway where
instantiate is true and
eventGatewayType is parallel.

Parallel Event-Based
Gateway to Start a
Process

Artifacts [BPMNShape]
Table 12.24 – Depiction Resolution for Artifacts

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:

Group

BPMNShape
Attributes:

Group

None

Text Annotation

None

La bel

Text Annotation

Text
Lanes [BPMNShape]
Table 12.25 – Depiction Resolution for Lanes

Specific Depiction Resolution:
Kind:

Depiction:

Vertical Lane

Business Process Model and Notation, v2.0

Label

BPMNShape
Attributes:

Lane

None or
isVertical is false

Lane

isVertical is true

Label

Horizontal Lane

bpmnElement:

401

Pools [BPMNShape]
Table 12.26 – Depiction Resolution for Pools

Specific Depiction Resolution:
Kind:

Depiction:

Horizontal Pool - with
Multi Instance Participant

Label

Label

Horizontal Pool

Vertical Pool
Label

Vertical Pool - with
Multi Instance
Participant

Label

bpmnElement:

BPMNShape
Attributes:

Participant where
ParticipantMultiplicity is
unspecified or set and its
maximum attribute is 1.

None or
isVertical is false

Participant where
ParticipantMultiplicity is set and its
maximum attribute is > 1..

None or
isVertical is false

Partcipant where
ParticipantMultiplicity is
unspecified or set and its
maximum attribute is 1.

isVertical is true

Participant where
ParticipantMultiplicity is set and its
maximum attribute is > 1.

isVertical is true

Choreography Tasks [BPMNShape]
While the depictions provided in Table 12.27 - Depiction Resolution for Choreography Tasks contain Participant Bands,
Participant Bands are separate shapes that need to be separately defined. Individual Participant Bands are rendered by
separate BPMNShape(s), each Participant Band referencing the corresponding participant. See page 407.

402

Business Process Model and Notation, v2.0

Table 12.27 – Depiction Resolution for Choreography Tasks

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:

BPMNShape
Attributes:

Choreography Task

ChoreographyTask where
loopType is None.

None

Choreography Task Loop

ChoreographyTask where
loopType is Standard.

None

Choreography Task Sequential Multi
Instance

ChoreographyTask where
loopType is
MultiInstanceSequential.

None

Choreography Task Parallel Multi Instance

ChoreographyTask where
loopType is MultiInstanceParallel.

None

Collapsed Sub-Choreographies [BPMNShape]
While the depictions provided in Table 12.28 - Depiction Resolution for Collapsed Sub-Choreographies contain
Participant Bands, Participant Bands are separate shapes that need to be separately defined. Individual Participant Bands
are rendered by separate BPMNShape(s), each Participant Band referencing the corresponding participant. See page 407.

Business Process Model and Notation, v2.0

403

Table 12.28 – Depiction Resolution for Sub-Choreographies (Collapsed)

Specific Depiction Resolution:
Kind:

Depiction:

Sub-Choreography Collapsed

Sub-Choreography Loop - Collapsed

Label

bpmnElement:

BPMNShape
Attributes:

SubChoreography where
loopType is None.

None or
isExpanded is
false

SubChoreography where
loopType is Standard.

None or
isExpanded is
false

SubChoreography where
loopType is
MultiInstanceSequential.

None or
isExpanded is
false

SubChoreography where
loopType is MultiInstanceParallel.

None or
isExpanded is
false

Label
Label

Sub-Choreography Sequential Multi
Instance - Collapsed

Label

Label
Label

Sub-Choreography Parallel Multi Instance
- Collapsed

Label

Label
Label

Expanded Sub-Choreographies [BPMNShape]
While the depiction provided in Table 12.29 - Depiction Resolution for Expanded Sub-Choreographies contains
Participant Bands, Participant Bands are separate shapes that need to be separately defined. Individual Participant Bands
are rendered by separate BPMNShape(s), each Participant Band referencing the corresponding participant. See page 407.
An expanded Sub Choreography has a loop type that is depicted exactly like the collapsed version in Table 12.28 Depiction Resolution for Collapsed Sub-Choreographies above.

404

Business Process Model and Notation, v2.0

Table 12.29 – Depiction Resolution for Sub-Choreographies (Expanded)

Specific Depiction Resolution:
Kind:

Depiction:

Sub-Choreography Expanded

bpmnElement:
SubChoreography

BPMNShape
Attributes:
isExpanded is
true

Call Choreographies (Calling a Global Choreography Task) [BPMNShape]
While the depictions provided in Table 12.30 - Depiction Resolution for Call Choreographies (Calling a Global
Choreography Task) contain Participant Bands, Participant Bands are separate shapes that need to be separately defined.
Individual Participant Bands are rendered by separate BPMNShape(s), each Participant Band referencing the
corresponding participant. See page 407.
Table 12.30 – Depiction Resolution for Call Choreographies (Calling a Global Choreography Task)

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:

BPMNShape
Attributes:

Call Choreography
Activity calling a
Global
Choreography Task

CallChoreography where
calledChoreographyRef is
unspecified or of type
GlobalChoreographyTask and
loopType is None.

None

Call Choreography
Activity calling a
Global
Choreography Task Loop

CallChoreography where
calledChoreographyRef is of type
GlobalChoreographyTask and
loopType is Standard.

None

Business Process Model and Notation, v2.0

405

Table 12.30 – Depiction Resolution for Call Choreographies (Calling a Global Choreography Task)

Call Choreography
Activity calling a
Global
Choreography Task Sequential Multi
Instance

CallChoreography where
calledChoreographyRef is of type
GlobalChoreographyTask and
loopType is
MultiInstanceSequential.

None

Call Choreography
Activity calling a
Global
Choreography Task Paralle lMulti Instance

CallChoreography where
calledChoreographyRef is of type
GlobalChoreographyTask and
loopType is MultiInstanceParallel.

None

Collapsed Call Choreographies (Calling a Choreography) [BPMNShape]
While the depictions provided in Table 12.31 - Depiction Resolution for Collapsed Call Choreography (Calling a
Choreography) contain Participant Bands, Participant Bands are separate shapes that need to be separately defined.
Individual Participant Bands are rendered by separate BPMNShape(s), each Participant Band referencing the
corresponding participant. See page 407.
Table 12.31 – Depiction Resolution for Collapsed Call Choreographies (Calling a Choreography)

Specific Depiction Resolution:
Kind:

Call Choreography
Activity calling a
Choreography

Depiction:

Label

Label

bpmnElement:

BPMNShape
Attributes:

CallChoreography where
calledChoreographyRef is of type
Choreography and loopType is
None.

None or
isExpanded is
false

CallChoreography where
calledChoreographyRef is of type
Choreography and loopType is
Standard.

None or
isExpanded is
false

CallChoreography where
calledChoreographyRef is of type
Choreography and loopType is
MultiInstanceSequential.

None or
isExpanded is
false

Label

Call Choreography
Activity calling a
Choreography - Loop

Label

Label
Label

Call Choreography
Activity calling a
Choreography Sequential Multi
Instance

406

Label

Label
Label

Business Process Model and Notation, v2.0

Table 12.31 – Depiction Resolution for Collapsed Call Choreographies (Calling a Choreography)

Call Choreography
Activity calling a
Choreography Parallel Multi Instance

Label

Label

CallChoreography where
calledChoreographyRef is of type
Choreography and loopType is
MultiInstanceParallel.

None or
isExpanded is
false.

Label

Expanded Call Choreographies (Calling a Choreography) [BPMNShape]
While the depiction provided in Table 12.32 - Depiction Resolution for Expanded Call Choreographies (Calling a
Choreography) contains Participant Bands, Participant Bands are separate shapes that need to be separately defined.
Individual Participant Bands are rendered by separate BPMNShape(s), each Participant Band referencing the
corresponding participant. See page 407.
An expanded Use Sub Choreography has a loop type that is depicted exactly like the collapsed version in Table 12.31 Depiction Resolution for Collapsed CallChoreography (Calling a Choreography) above.
Table 12.32 – Depiction Resolution for Expanded Call Choreographies (Calling a Choreography)

Specific Depiction Resolution:
Kind:

Depiction:

Call Choreography
Activity calling a
Choreography

bpmnElement:
CallChoreography where
calledChoreographyRef is of type
Choreography.

BPMNShape
Attributes:
isExpanded is
true.

Choreography Participant Bands [BPMNShape]
Participant Bands (used in Choreography shapes) are separate shapes that need to be separately defined. Individual
Participant Bands are rendered by separate BPMNShape. Each Participant Band referencing the corresponding participant.
Note that for Participant Bands with the envelope decorator, the envelope decorator should be depicted close to the band,
vertically centered with the band, and linked to the band using a dotted line. The name of the message may be used as a
label for the envelop decorator. BPMN DI does not provide an interchange of the bounds of the label of the envelope
decorator.
The bounds of the BPMNShape representing the band do not include the envelope decorator. The envelope decorator is
therefore outside of the BPMNShape bounds. BPMN DI does not provide an interchange of the bounds of the envelope
decorator.
Business Process Model and Notation, v2.0

407

Table 12.33 – Depiction Resolution for Choreography Participant Bands

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:

BPMNShape
Attributes:

Initiating Participant Top

Participant where
participantMultiplicity is
unspecified or is set and its
maximum attribute is 1.

participantBandKind is
top_initiating and
isMessageVisible is
unspecified or false.

Initiating Participant Top with Decorator

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is 1.

participantBandKind is
top_initiating and
isMessageVisible is
true.

Initiating - Additional
Participant

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is 1.

participantBandKind is
middle_initiating.

Initiating Participant Bottom

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is 1.

participantBandKind is
bottom_initiating and
isMessageVisible is
unspecified or false.

Initiating Participant Bottom with
Decorator

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is 1.

participantBandKind is
bottom_initiating and
isMessageVisible is
true.

Initiating - Top - MultiInstance
Participant

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is > 1.

participantBandKind is
top_initiating and
isMessageVisible is
unspecified or false.

Initiating - Top - MultiInstance
Participant with
Decorator

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is > 1.

participantBandKind is
top_initiating and
isMessageVisible is
true.

Initiating - Additional
Multi-Instance
Participant

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is > 1.

participantBandKind is
middle_initiating.

Initiating - Bottom Multi-Instance
Participant

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is > 1.

participantBandKind is
bottom_initiating and
isMessageVisible is
unspecified or false.

408

Business Process Model and Notation, v2.0

Table 12.33 – Depiction Resolution for Choreography Participant Bands

Initiating - Bottom Multi-Instance
Participant with
Decorator

Participant where
participantMultiplicity is
unspecified or set and its
maximum attribute is > 1.

participantBandKind is
bottom_initiating and
isMessageVisible is
true.

Non Initiating
Participant - Top

Participant where
participantMultiplicity is set and its
maximum attribute is 1.

participantBandKind is
top_non_initiating and
isMessageVisible is
unspecified or false.

Non Initiating
Participant - Top with
Decorator

Participant where
participantMultiplicity is set and its
maximum attribute is 1.

participantBandKind is
top_non_initiating and
isMessageVisible is
true.

Non Initiating Additional Participant

Participant where
participantMultiplicity is set and its
maximum attribute is 1.

participantBandKind is
middle_non_initiating.

Non Initiating
Participant - Bottom

Participant where
participantMultiplicity is set and its
maximum attribute is 1.

participantBandKind is
bottom_non_initiating
and isMessageVisible is
unspecified or false.

Non Initiating
Participant - Bottom
with Decorator

Participant where
participantMultiplicity is set and its
maximum attribute is 1.

participantBandKind is
bottom_non_initiating
and isMessageVisible is
true.

Non Initiating - Top Multi-Instance
Participant

Participant where
participantMultiplicity is set and its
maximum attribute is > 1.

participantBandKind is
top_non_initiating and
isMessageVisible is
unspecified or false.

Non Initiating - Top Multi-Instance
Participant with
Decorator

Participant where
ParticipantMultiplicity is set and its
maximum attribute is > 1.

participantBandKind is
top_non_initiating and
isMessageVisible is
true.

Non Initiating Additional MultiInstance Participant

Participant where
participantMultiplicity is set and its
maximum attribute is > 1.

participantBandKind is
middle_non_initiating.

Non Initiating Bottom - Multi-Instance
Participant

Participant where
ParticipantMultiplicity is set and its
maximum attribute is > 1.

participantBandKind is
bottom_non_initiating
and isMessageVisible is
unspecified or false.

Business Process Model and Notation, v2.0

409

Table 12.33 – Depiction Resolution for Choreography Participant Bands

Participant where
participantMultiplicity is set and its
maximum attribute is > 1.

Non Initiating Bottom - Multi-Instance
Participant with Decorator

participantBandKind is
bottom_non_initiating
and isMessageVisible is
true.

Conversations [BPMNShape]
Table 12.34 – Depiction Resolution for Conversations

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:

BPMNShape
Attributes:

Conversation

Conversation

None

Sub-Conversation

SubConversation

None

Call Conversation

CallConversation where
calledCollaborationRef is a
GlobalConversation.

None

Call Conversation

CallConversation where
calledCollaborationRef is a
Collaboration.

None

12.3.3 BPMNEdge
Connecting Objects [BPMNEdge]
The target [targetElement] and source [sourceElement] of a BPMNEdge may be redefined when the depiction of the
source or target of the edge is different than the target [targetRef] and source [sourceRef] of the referenced model element
[bpmnElement] (e.g., Message flow finishing on the border of a black box Pool or a collapsed Sub-Process rather than the
actual Flow Node within the Pool or Sub-Process). In such case, the targetElement and/or sourceElement of the
BPMNEdge must point to the appropriate BPMNShape or BPMNEdge.

410

Business Process Model and Notation, v2.0

The source [sourceElement] and target [targetElement] of a BPMNEdge can never be a BPMNShape with
participantBandKind set (i.e., only Choreography Activity can be source or target of the BPMNEdge not the Participant
Bands).
Note that for Message Flow with an envelope decorator, the envelope decorator should be at the midpoint of the message
flow. BPMN DI does not provide an interchange of the bounds of the envelope decorator.
The “diamond” at the source of the Conditional Sequence Flow should not be depicted when the source of a Conditional
Sequence Flow is a Gateway. In other words, when the source of a Conditional Sequence Flow is a Gateway, the
Conditional Sequence Flow looks like a Sequence Flow.
Even though DataInputAssociation(s) and DataOutputAssociation(s) (Directed Data Associations) always point to
DataInput(s) or DataOutput(s) as sources or targets within the BPMN model, they are mostly depicted as starting or
finishing on the border of a different depicted element and thus, the target [targetElement] or source [sourceElement] of
the BPMNEdge must be specified.
Table 12.35 – Depiction Resolution for Connecting Objects

Specific Depiction Resolution:
Kind:

Depiction:

bpmnElement:
SequenceFlow where default is
false and conditionExpression is
unspecified.

None

SequenceFlow where default is
false and conditionExpression is
specified (exception when source
is a Gateway).

None

SequenceFlow where default is
true and conditionExpression is
unspecified.

None

MessageFlow

messageVisibleKind is
unspecified.

MessageFlow

messageVisibleKind is
initiating.

MessageFlow

messageVisibleKind is
non-initiating.

Label

Association where
associationDirection is none.

None

Association where
associationDirection is one.

None

Label

Sequence Flow
Label

Conditional
Sequence Flow

Label

Default Sequence
Flow

Lab el

Message Flow
Label

Initiating
Message Flow with
Decorator

Label

Non-Initiating Message Flow with
Decorator

Label

Association

Directional
Association

BPMNShape
Attributes:

Business Process Model and Notation, v2.0

411

Table 12.35 – Depiction Resolution for Connecting Objects

Bi -Directional
Association
Data Association

Directed Data
Association

Label

Label

Label

Conversation Link

Association where
associationDirection is both.

None

None

The targetElement of
the BPMNEdge is itself
of type BPMNEdge
where bpmnElement is
of type SequenceFlow

DataInputAssociation or
DataOutputAssociation

None

ConversationLink

None

Label

12.4 Example(s)
This section provides examples to support interpretation of the BPMN DI specification. Some BPMN diagram depictions
along with their XML BPMN DI serializations are provided. The XML samples provided in this section present only
BPMN DI instances and omit the BPMN 2.0 abstract syntax.
For readability purposes, the bpmnElement that is referenced by the BPMNPlane, BPMNShape and BPMNEdge use a
representative string pattern. This string pattern is:
BPMNModelClassName_BPMNModelNameAttributeValue
For example: “Task_Activity” for a Task named “Activity.”
In the provided XML serializations, the di namespace refers to the Diagram Interchange namespace defined in Annex B,
and the dc namespace refers to the Diagram Common namespace also defined in Annex B.

12.4.1 Depicting Content in a Sub-Process
This section shows various ways of depicting the content of a Sub-Process of the same BPMN model.
The BPMN model contains a process composed of a none start event (named “StartEvent”), a sub-process (named
“SubProcess”) and a none end event (named “EndEvent”). There is a sequence flow (named “a”) between the start event
(named “StartEvent”) and the sub-process (named “SubProcess”) and a sequence flow (named “d”) between the subprocess (named “SubProcess”) and the end event (named “EndEvent”).
The sub-process (named “SubProcess”) is composed of a none start event (named “SubProcessStart”), an abstract task
(named “Activity”) and a none end event (named “SubProcessEnd”). There is a sequence flow (named “b”) between the
start event (named “SubProcessStart”) and the task (named “Activity”) and a sequence flow (named “c”) between the task
(named “Activity”) and the end event (named “SubProcessEnd”).
Expanded Sub-Process
First, a BPMN diagram depicts the BPMN model with the expanded sub-process showing its content (see Figure 12.8).
This leads to a BPMN DI serialization of a single diagram that depicts this process (see Table 12.37 - Expanded SubProcess BPMN DI instance).
412

Business Process Model and Notation, v2.0

SubProcess

a
StartEvent

b

Activity

SubProcess
Start

c
SubProcess
End

d
EndEvent

Figure 12.8 - Expanded Sub-Process Example

Table 12.36 - Expanded Sub-Process BPMN DI instance

<BPMNDiagram name=" Events Inside the Sub Process " resolution="72">
<BPMNPlane bpmnElement="Process_Process">
<BPMNShape bpmnElement="StartEvent_StartEvent" >
<dc:Bounds height="30.0" width="30.0" x="120.0" y="225.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="SubProcess_SubProcess" isExpanded="true">
<dc:Bounds height="168.0" width="348.0" x="192.0" y="156.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="StartEvent_SubProcessStart" id="BorderStart" >
<dc:Bounds height="30.0" width="30.0" x="228.0" y="225.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Task_Activity">
<dc:Bounds height="68.0" width="83.0" x="324.0" y="206.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="EndEvent_SubProcessEnd">
<dc:Bounds height="32.0" width="32.0" x="468.0" y="224.0" id ="BorderEnd" />
<BPMNLabel/>

</BPMNShape>
<BPMNShape bpmnElement="EndEvent_EndEvent">
<dc:Bounds height="32.0" width="32.0" x="604.0" y="224.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNEdge bpmnElement="SequenceFlow_a" targetElement="BorderStart" >
<di:waypoint x="150.0" y="240.0"/>
<di:waypoint x="192.0" y="240.0"/>
<BPMNLabel/>
</BPMNEdge>
<BPMNEdge bpmnElement="SequenceFlow_b" sourceElement="BorderStart" >
Business Process Model and Notation, v2.0

413

<di:waypoint x="258.0" y="240.0"/>
<di:waypoint x="324.0" y="240.0"/>
<BPMNLabel/>
</BPMNEdge>
<BPMNEdge bpmnElement="SequenceFlow_c" targetElement="BorderEnd" >
<di:waypoint x="407.0" y="240.0"/>
<di:waypoint x="468.0" y="240.0"/>
<BPMNLabel/>
</BPMNEdge>
<BPMNEdge bpmnElement="SequenceFlow_d" sourceElement="BorderEnd" >
<di:waypoint x="540.0" y="240.0"/>
<di:waypoint x="604.0" y="240.0"/>
<BPMNLabel/>
</BPMNEdge>
</BPMNPlane>
</BPMNDiagram>

Expanded Sub-Process with Start and End Events on Border
An alternative to depicting the same BPMN model of Section 12.4.1 would be to place the sub-process start and end
events on the border of the sub-process (see Figure 12.9). In the BPMN DI serialization of this diagram (see Table 12.40
- Expanded Sub-Process with Start and End Events on Border BPMN DI instance), the target of the sequence flow named
“a” and the source of the sequence flow named “d” are the start and end events on the boundary of the sub-process.
Compare the target of the sequence flow named “a” and the source of the sequence flow named “d” of Table 12.37 Expanded Sub-Process BPMN DI instance with that of Table 12.38 - Start and End Events on the Border BPMN DI
instance.

SubProcess

a

b

StartEvent SubProcess
Start

Activity

c

d

SubProcess EndEvent
End

Figure 12.9 - Start and End Events on the Border Example
Table 12.37 - Start and End Events on the Border BPMN DI instance

<BPMNDiagram name=" StartAndEdnEventsOnTheBorder " resolution="72">
<BPMNPlane bpmnElement="Process_Process">
<BPMNShape bpmnElement="StartEvent_StartEvent" >
<dc:Bounds height="30.0" width="30.0" x="120.0" y="225.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="SubProcess_SubProcess" isExpanded="true">

414

Business Process Model and Notation, v2.0

<dc:Bounds height="168.0" width="348.0" x="192.0" y="156.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="StartEvent_SubProcessStart">
<dc:Bounds height="30.0" width="30.0" x="177.0" y="225.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Task_Activity">
<dc:Bounds height="68.0" width="83.0" x="324.0" y="206.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="EndEvent_SubProcessEnd">
<dc:Bounds height="32.0" width="32.0" x="524.0" y="224.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="EndEvent_EndEvent">
<dc:Bounds height="32.0" width="32.0" x="604.0" y="224.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNEdge bpmnElement="SequenceFlow_a">
<di:waypoint x="150.0" y="240.0"/>
<di:waypoint x="177.0" y="240.0"/>
<BPMNLabel/>
</BPMNEdge>
<BPMNEdge bpmnElement="SequenceFlow_b">
<di:waypoint x="207.0" y="240.0"/>
<di:waypoint x="324.0" y="240.0"/>
<BPMNLabel/>
</BPMNEdge>
<BPMNEdge bpmnElement="SequenceFlow_c">
<di:waypoint x="407.0" y="240.0"/>
<di:waypoint x="524.0" y="240.0"/>
<BPMNLabel/>
</BPMNEdge>
<BPMNEdge bpmnElement="SequenceFlow_d">
<di:waypoint x="556.0" y="240.0"/>
<di:waypoint x="604.0" y="240.0"/>
<BPMNLabel/>
</BPMNEdge>
</BPMNPlane>
</BPMNDiagram>

Collapsed Sub-Process
Alternatively, one could depict the same BPMN model of Section 12.4.1 as two diagrams. A first diagram (Figure 12.10)
depicts the process with the sub-process collapsed, while a second diagram (Figure 12.11) depicts the content of the subprocess.

Business Process Model and Notation, v2.0

415

a

S u bP rocess

S ta rtE ve nt

d
E nd E ven t

Figure 12.10 - Collapsed Sub-Process

b
SubProcess
Start

Activity

c
SubProcess
End

Figure 12.11 - Contents of Collapsed Sub-Process

Table 12.38 - Collapsed Sub-Process BPMN DI instance

<BPMNDiagram name="Collapsed Sub-Process" resolution="72">
<BPMNPlane bpmnElement="Process_Process">
<BPMNShape bpmnElement="StartEvent_StartEvent">
<dc:Bounds height="30.0" width="30.0" x="96.0" y="189.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="EndEvent_EndEvent">
<dc:Bounds height="32.0" width="32.0" x="308.0" y="188.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="SubProcess_SubProcess" isExpanded="false">
<dc:Bounds height="68.0" width="83.0" x="168.0" y="170.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNEdge bpmnElement="SequenceFlow_a">
<di:waypoint x="126.0" y="204.0"/>
<di:waypoint x="168.0" y="204.0"/>
<BPMNLabel/>
</BPMNEdge>
<BPMNEdge bpmnElement="SequenceFlow_d">
<di:waypoint x="251.0" y="204.0"/>
<di:waypoint x="308.0" y="204.0"/>
<BPMNLabel/>
</BPMNEdge>
</BPMNPlane>
</BPMNDiagram>

416

Business Process Model and Notation, v2.0

Table 12.39 - Sub-Process Content BPMN DI instance

<BPMNDiagram name="SubProcess" resolution="72">
<BPMNPlane bpmnElement="SubProcess_SubProcess">
<BPMNShape bpmnElement="StartEvent_SubProcessStart">
<dc:Bounds height="30.0" width="30.0" x="208.0" y="219.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Task_Activity">
<dc:Bounds height="68.0" width="83.0" x="304.0" y="200.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="EndEvent_SubProcessEnd">
<dc:Bounds height="32.0" width="32.0" x="448.0" y="218.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNEdge bpmnElement="SequenceFlow_b">
<di:waypoint x="238.0" y="234.0"/>
<di:waypoint x="304.0" y="234.0"/>
<BPMNLabel/>
</BPMNEdge>
<BPMNEdge bpmnElement="SequenceFlow_c">
<di:waypoint x="387.0" y="234.0"/>
<di:waypoint x="448.0" y="234.0"/>
<BPMNLabel/>
</BPMNEdge>
</BPMNPlane>
</BPMNDiagram>

12.4.2 Multiple Lanes and Nested Lanes
In this next example, a diagram depicting a BPMN Process is composed of a LaneSet which contains 2 lanes is presented.
The second lane contains 2 sub lanes (See Figure 12.12).

Business Process Model and Notation, v2.0

417

Lane 1

a

SubProcess

Lane 2

Lane 2-1

M anual
Task

Lane 2-2

b

User Task
Document

c

Figure 12.12 - Nested Lanes Example

Table 12.40 - Multiple Lanes and Nested Lanes BPMN DI instance

<BPMNDiagram name="Lanes and Nested Lanes" resolution="72">
<BPMNPlane bpmnElement="Process_LanesAndNestedLanes">
<BPMNShape bpmnElement="Lane_Lane1" isHorizontal="true">
<dc:Bounds height="144.0" width="498.0" x="87.0" y="144.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Lane_Lane2" isHorizontal="true">
<dc:Bounds height="162.0" width="498.0" x="87.0" y="288.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Lane_Lane2_2" isHorizontal="true">
<dc:Bounds height="78.0" width="474.0" x="111.0" y="372.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Lane_Lane2_1" isHorizontal="true">
<dc:Bounds height="84.0" width="474.0" x="111.0" y="288.0"/>
<BPMNLabel/>
</BPMNShape>

12.4.3 Vertical Collaboration
In this example, a Collaboration between two Participants (Pool A and Pool B) is depicted. The first Participant is
depicted with a white box Pool and the second Participant is depicted with a black box Pool. This diagram also depicts
message flows that are decorated with message envelopes (See Figure 12.13).

418

Business Process Model and Notation, v2.0

Pool A
Lane 1

Pool B
Lane 2

Sending

Receiving

a

b

Figure 12.13 - Vertical Collaboration Example

Table 12.41 - Vertical Collaboration BPMN DI instance

<BPMNDiagram name="Vertical Collaboration" resolution="72">
<BPMNPlane bpmnElement="Collaboration_Vertical_Collaboration">
<BPMNShape bpmnElement="Participant_Pool_A" isHorizontal="false">
<dc:Bounds height="258.0" width="336.0" x="96.0" y="276.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Lane_Lane1" isHorizontal="false">
<dc:Bounds height="228.0" width="168.0" x="96.0" y="306.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Lane_Lane2" isHorizontal="false">
<dc:Bounds height="228.0" width="168.0" x="264.0" y="306.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="Participant_Pool_B" isHorizontal="false">
<dc:Bounds height="258.0" width="336.0" x="624.0" y="279.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="TaskReceiving_Receiving">
<dc:Bounds height="68.0" width="83.0" x="145.0" y="436.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNShape bpmnElement="TaskSending_Sending">
<dc:Bounds height="68.0" width="83.0" x="282.0" y="338.0"/>
<BPMNLabel/>
</BPMNShape>
<BPMNEdge bpmnElement="MessageFlow_a" messageVisibleKind="initiating">
<di:waypoint x="366.0" y="372.0"/>
<di:waypoint x="624.0" y="374.0"/>
<BPMNLabel/>
</BPMNEdge>
Business Process Model and Notation, v2.0

419

<BPMNEdge bpmnElement="MessageFlow_b" messageVisibleKind="non_initiating">
<di:waypoint x="624.0" y="470.0"/>
<di:waypoint x="228.0" y="470.0"/>
<BPMNLabel/>
</BPMNEdge>
</BPMNPlane>
</BPMNDiagram>

12.4.4 Conversation
The following diagram depicts a Collaboration between 3 Participants (Participants 1, 2 and 3) including two
Conversations. The diagram also has an annotation connected to a message flow (See Figure 12.14).

Participant 1

Participant 2

a

b

Conversation 1

c
e

Message Annotation
f

Conversation 2

Participant 3

d

Figure 12.14 - Conversation Example

Table 12.42 - Conversation BPMN DI instance

<bpmndi:BPMNDiagram name="Conversation " resolution="72">
<bpmndi:BPMNPlane bpmnElement="Collaboration_Conversation">
<bpmndi:BPMNShape bpmnElement="Participant_Participant_1" isHorizontal="false">
<dc:Bounds height="144.0" width="132.0" x="97.0" y="108.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Participant_Participant_2" isHorizontal="false">
<dc:Bounds height="144.0" width="120.0" x="360.0" y="108.0"/>
<bpmndi:BPMNLabel/>
420

Business Process Model and Notation, v2.0

</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Conversation_Conversation_1">
<dc:Bounds height="38.0" width="38.0" x="274.0" y="168.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNEdge bpmnElement="ConversationLink_A">
<di:waypoint x="229.0" y="187.0"/>
<di:waypoint x="274.0" y="187.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
<bpmndi:BPMNEdge bpmnElement="ConversationLink_B">
<di:waypoint x="312.0" y="187.0"/>
<di:waypoint x="360.0" y="187.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
<bpmndi:BPMNShape bpmnElement="Participant_Participant_3" isHorizontal="true">
<dc:Bounds height="108.0" width="384.0" x="96.0" y="396.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Conversation_Conversation_2">
<dc:Bounds height="38.0" width="38.0" x="406.0" y="305.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNEdge bpmnElement="ConversationLink_C">
<di:waypoint x="425.0" y="252.0"/>
<di:waypoint x="425.0" y="305.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
<bpmndi:BPMNEdge bpmnElement="ConversationLink_D">
<di:waypoint x="425.0" y="343.0"/>
<di:waypoint x="425.0" y="396.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
<bpmndi:BPMNShape bpmnElement="TextAnnotation_MessageAnnotation">
<dc:Bounds height="23.0" width="108.0" x="210.0" y="313.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNEdge bpmnElement="MessageFlow_E">
<di:waypoint x="164.0" y="252.0"/>
<di:waypoint x="163.0" y="396.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
<bpmndi:BPMNEdge bpmnElement="Association_F">
<di:waypoint x="163.0" y="360.0"/>
<di:waypoint x="181.0" y="360.0"/>
<di:waypoint x="181.0" y="324.0"/>
<di:waypoint x="210.0" y="324.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
</bpmndi:BPMNPlane>
</bpmndi:BPMNDiagram>
Business Process Model and Notation, v2.0

421

12.4.5 Choreography
The following diagram depicts a Choreography consisting of 3 Choreography Activities (2 Choreography Tasks and 1
SubChoreography). This diagram also depicts Participant Bands with and without envelope decorator.

P a rtic ip a n t 1
P a rtic ip a n t 1

P a rtic ip a n t 1

SC
a

CT 1

b

CT 2

S ta rtE v e n t

P a rtic ip a n t 2

P a rtic ip a n t 2

c
P a rtic ip a n t 2
P a rtic ip a n t 3

d
E n d E ve n t

Figure 12.15 - Choreography Example

Table 12.43 - Choreography BPMN DI instance

<bpmndi:BPMNDiagram name="Choreography" resolution="72">
<bpmndi:BPMNPlane bpmnElement="Choreography_Choreography">
<bpmndi:BPMNShape bpmnElement="StartEvent_StartEvent">
<dc:Bounds height="30.0" width="30.0" x="72.0" y="138.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="ChoreographyTask_CT1" id="DI_ChoreographyTask_CT1">
<dc:Bounds height="114.0" width="96.0" x="156.0" y="96.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Participant_Participant1"
choreographyActivityShape="DI_ChoreographyTask_CT1" isMessageVisible="true"
participantBandKind="top_non_initiating">
<dc:Bounds height="20.0" width="96.0" x="156.0" y="96.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Participant_Participant2"
choreographyActivityShape="DI_ChoreographyTask_CT1" isMessageVisible="true"
participantBandKind="bottom_initiating">
<dc:Bounds height="20.0" width="96.0" x="156.0" y="190.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="ChoreographyTask_CT2" id="DI_ChoreographyTask_CT2">
<dc:Bounds height="114.0" width="96.0" x="312.0" y="96.0"/>
<bpmndi:BPMNLabel/>
422

Business Process Model and Notation, v2.0

</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Participant_Participant1"
choreographyActivityShape="DI_ChoreographyTask_CT2" isMessageVisible="false"
participantBandKind="top_non_initiating">
<dc:Bounds height="20.0" width="96.0" x="312.0" y="96.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Participant_Participant2"
choreographyActivityShape="DI_ChoreographyTask_CT2" isMessageVisible="true"
participantBandKind="bottom_initiating">
<dc:Bounds height="20.0" width="96.0" x="312.0" y="190.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="SubChoreography_SC" isExpanded="false">
<dc:Bounds height="117.0" width="96.0" x="468.0" y="94.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Participant_Participant1"
choreographyActivityShape="DI_SubChoreography_SC" isMessageVisible="false"
participantBandKind="top_non_initiating">
<dc:Bounds height="20.0" width="96.0" x="468.0" y="94.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Participant_Participant3"
choreographyActivityShape="DI_SubChoreography_SC" isMessageVisible="false"
participantBandKind="bottom_non_initiating">
<dc:Bounds height="20.0" width="96.0" x="468.0" y="191.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="Participant_Participant2"
choreographyActivityShape="DI_SubChoreography_SC" isMessageVisible="false"
participantBandKind="middle_initiating">
<dc:Bounds height="20.0" width="96.0" x="468.0" y="171.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNShape bpmnElement="EndEvent_EndEvent">
<dc:Bounds height="32.0" width="32.0" x="624.0" y="137.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNShape>
<bpmndi:BPMNEdge bpmnElement="SequenceFlow_a">
<di:waypoint x="102.0" y="153.0"/>
<di:waypoint x="156.0" y="153.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
<bpmndi:BPMNEdge bpmnElement="SequenceFlow_b">
<di:waypoint x="252.0" y="153.0"/>
<di:waypoint x="312.0" y="153.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
<bpmndi:BPMNEdge bpmnElement="SequenceFlow_c">
<di:waypoint x="408.0" y="153.0"/>
Business Process Model and Notation, v2.0

423

<di:waypoint x="468.0" y="153.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
<bpmndi:BPMNEdge bpmnElement="SequenceFlow_d">
<di:waypoint x="564.0" y="153.0"/>
<di:waypoint x="624.0" y="153.0"/>
<bpmndi:BPMNLabel/>
</bpmndi:BPMNEdge>
</bpmndi:BPMNPlane>
</bpmndi:BPMNDiagram>

424

Business Process Model and Notation, v2.0

